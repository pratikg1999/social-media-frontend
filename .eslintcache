[{"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/index.js":"1","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/App.js":"2","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/hoc/providerHoc.js":"3","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/login/LoginApp.js":"4","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/axiosInstance.js":"5","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/containers/signup.js":"6","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/reducer.js":"7","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/actions.js":"8","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/dashboard/Dashboard.js":"9","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/profile/ProfilePage.js":"10","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/profile.js":"11","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/home/home.js":"12","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/comment/comment.js":"13","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post/post.js":"14","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post-card/post-card.js":"15","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/add-post/add-post.js":"16"},{"size":312,"mtime":1610129642304,"results":"17","hashOfConfig":"18"},{"size":652,"mtime":1610214307016,"results":"19","hashOfConfig":"18"},{"size":291,"mtime":1610130196615,"results":"20","hashOfConfig":"18"},{"size":8287,"mtime":1610253626259,"results":"21","hashOfConfig":"18"},{"size":185,"mtime":1610194045536,"results":"22","hashOfConfig":"18"},{"size":4073,"mtime":1610162084755,"results":"23","hashOfConfig":"18"},{"size":379,"mtime":1610186195452,"results":"24","hashOfConfig":"18"},{"size":43,"mtime":1610129699640,"results":"25","hashOfConfig":"18"},{"size":5831,"mtime":1610202876539,"results":"26","hashOfConfig":"18"},{"size":2632,"mtime":1610202348194,"results":"27","hashOfConfig":"18"},{"size":4390,"mtime":1610202184189,"results":"28","hashOfConfig":"18"},{"size":4551,"mtime":1610256961112,"results":"29","hashOfConfig":"18"},{"size":872,"mtime":1610213233963,"results":"30","hashOfConfig":"18"},{"size":696,"mtime":1610216760242,"results":"31","hashOfConfig":"18"},{"size":2300,"mtime":1610256211421,"results":"32","hashOfConfig":"18"},{"size":2645,"mtime":1610217570492,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"11px870",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/index.js",[],["72","73"],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/App.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/hoc/providerHoc.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/login/LoginApp.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/axiosInstance.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/containers/signup.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/reducer.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/actions.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/dashboard/Dashboard.js",["74","75","76","77","78","79","80","81","82","83"],"import React, { Component } from 'react';\nimport axios from \"../../axiosInstance\";\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Typography,\n    Link,\n    Dialog,\n    DialogContent,\n    DialogContentText,\n    Drawer,\n    AppBar,\n    Toolbar,\n    MenuItem,\n    Menu,\n    IconButton,\n    Backdrop,\n    CircularProgress,\n    Snackbar,\n} from \"@material-ui/core\";\nimport { Dashboard as DashboardIcon, AccountCircle } from \"@material-ui/icons\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ProfilePage from \"../profile/ProfilePage\";\nimport Home from \"../home/home\";\nimport * as actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\n\nconst styles = (theme) => {\n    return {\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n        },\n    }\n};\n\nclass Dashboard extends Component {\n\n    handleMenu = (event) => {\n        // console.log(\"opening menu \", event.currentTarget);\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState((prevState, props) => {\n            return { anchorEl: null };\n        });\n    }\n\n    state = {\n        anchorEl: null,\n    }\n\n\n    componentDidMount() {\n        axios.defaults.headers['x-access-token'] = window.localStorage[\"x-access-token\"];\n\n        axios.get(\"/user/getCurrentUserInfo\").then((response) => {\n            console.log(response.data);\n            response.data.profileImage = axios.defaults.baseURL + response.data.profileImage;\n            this.props.modifyState({ isLoading: false, currentUserInfo: response.data, showSnackbar: true, snackbarMessage: \"User  info fetched\" });\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"fetching user error\", err.response);\n            }\n            else {\n                console.log(\"fetch error no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Some error occured!\" });\n        })\n\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <>\n                {this.props.isLoading &&\n                    <Backdrop className={classes.backdrop} open={this.props.isLoading} >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                }\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Social-media\n                </Typography>\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={this.handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={this.state.anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={this.state.anchorEl ? true : false}\n                                onClose={this.handleMenuClose}\n                            >\n                                <MenuItem onClick={()=>{this.props.history.push(\"/profile\"); this.handleMenuClose();}}>Profile</MenuItem>\n                                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <div id=\"content\">\n                    <Switch>\n                        <Route path=\"/home\" exact component={Home} />\n                        <Route path=\"/profile/:userId\" component={ProfilePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                    </Switch>\n                </div>\n                { this.props.showSnackbar &&\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        open={this.props.showSnackbar}\n                        autoHideDuration={2000}\n                        onClose={() => this.props.modifyState({ showSnackbar: false })}\n                        message={this.props.snackbarMessage} />\n                }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.isLoading,\n        currentUserInfo: state.currentUserInfo,\n        showSnackbar: state.showSnackbar,\n        snackbarMessage: state.snackbarMessage,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        modifyState: (newState) => dispatch({ type: actions.MODIFY_STATE, newState: newState }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(withStyles(styles, { withTheme: true })(Dashboard)));","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/profile/ProfilePage.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/profile.js",["84","85"],"import React, { Component } from \"react\";\nimport { Grid, Input, TextField, Button, IconButton } from \"@material-ui/core\";\nimport { PhotoCamera } from \"@material-ui/icons\"\nimport axios from \"../axiosInstance\"\nclass Profile extends Component {\n\n    state = {\n        profileImage: \"logo192.png\",\n    }\n\n    componentDidMount() {\n        //this.updateFormFeilds();\n\n        console.log(\"profile \", this.props);\n        if (this.props.info.profileImage) {\n            this.setState({ profileImage: this.props.info.profileImage });\n        }\n    }\n\n\n    handleInputImage = (evt) => {\n        const file = evt.target.files[0];\n        const fr = new FileReader();\n        fr.readAsDataURL(file)\n        fr.onload = () => this.setState({ profileImage: fr.result });\n\n    }\n\n\n    updateFormFeilds() {\n        //Manually update TextFeilds as updatings state Here might cause infinite loop\n        for (const key in this.props.info) {\n            if (Object.hasOwnProperty.call(this.props.info, key)) {\n                const element = this.props.info[key];\n                if (document.getElementsByName(key).length > 0 && key !== \"profileImage\") {\n                    document.getElementsByName(key)[0].value = element;\n                }\n            }\n        }\n        if (this.props.info && this.props.info.profileImage) {\n            document.getElementById(\"profileImageSrc\").src = this.props.info.profileImage;\n        }\n    }\n\n    componentDidUpdate() {\n        //this.updateFormFeilds();\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.handleUpdateProfile(new FormData(e.target));\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"col-sm-12 col-lg-10 col m-auto\">\n                    <form onSubmit={this.onSubmit}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                                <img id=\"profileImageSrc\" src={this.state.profileImage} width=\"200px\" height=\"300px\" alt=\"Profile pic\" style={{ objectFit: \"contain\" }} />\n                                {this.props.editable &&\n                                    <div className=\"text-center\">\n                                        <input name=\"profileImage\" accept=\"image/*\" className=\"d-none\" id=\"icon-button-file\" type=\"file\" onChange={this.handleInputImage} />\n                                        <label htmlFor=\"icon-button-file\">\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                                <PhotoCamera />\n                                            </IconButton>\n                                        </label>\n                                    </div>\n                                }\n\n                            </Grid>\n                            <Grid item xs={12} lg={6}>\n                                <TextField defaultValue={this.props.info.firstName} required name=\"firstName\" disabled={!this.props.editable} fullWidth placeholder=\"First Name\" variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12} lg={6}>\n                                <TextField defaultValue={this.props.info.lastName} required name=\"lastName\" disabled={!this.props.editable} fullWidth label=\"Last Name\" variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12} >\n                                <TextField defaultValue={this.props.info.email} required name=\"email\" disabled type=\"email\" fullWidth label=\"Email\" variant=\"outlined\" />\n                            </Grid>\n                            <Grid item xs={12} >\n                                <TextField defaultValue={this.props.info.phone} required name=\"phone\" disabled={!this.props.editable} type=\"tel\" fullWidth label=\"Phone\" variant=\"outlined\" />\n                            </Grid>\n                            {this.props.editable &&\n                                <Grid item xs={12} className=\"text-center\">\n                                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Save changes</Button>\n                                </Grid>\n                            }\n                        </Grid>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/home/home.js",["86","87","88","89","90"],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/comment/comment.js",["91","92","93","94","95"],"import React, { Component } from \"react\";\nimport { Grid, Paper, Box, Typography } from \"@material-ui/core\";\nimport classes from \"./comment.module.css\";\nconst Comment = (props) => {\n    return (\n        <Grid container justify=\"space-around\" className=\"text-left\">\n            <Grid item xs={2} className=\"text-center\" mx={1}>\n                {/* circular avatar of commenter */}\n                <img src={props.userImage} width=\"50px\" height=\"50px\" style={{borderRadius: \"50%\"}}></img>\n            </Grid>\n            <Grid item xs={10}  mx={1} className=\"p-2\">\n                <div className={classes.title}>{props.userName}</div>\n                <div><span className={classes.subtitle}>{props.creationTime.toString()}</span></div>\n                <div className={props.commentBody}>{props.body}</div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Comment;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post/post.js",["96","97","98","99","100","101"],"import React from \"react\";\nimport { Container, Grid, Typography, CardContent, CardMedia } from \"@material-ui/core\";\nimport classes from \"./post.module.css\";\nimport axios from \"../../axiosInstance\"\nconst Post = (props) => {\n    return (\n\n        <>\n            {props.image != undefined &&\n                <CardMedia>\n                    <img className={classes.postImage} src={axios.defaults.baseURL + props.image} />\n                </CardMedia>\n            }\n            {props.body != undefined &&\n                <CardContent>\n                    <div className={classes.postBody}>{props.body}</div>\n                </CardContent>\n            }\n\n\n        </>\n\n\n\n    );\n}\n\nexport default Post;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post-card/post-card.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/add-post/add-post.js",["102","103"],"import React, { useRef } from \"react\";\nimport { Button, Grid, TextField, Paper, Typography, IconButton } from \"@material-ui/core\";\nimport { Image } from '@material-ui/icons';\n\nclass AddPost extends React.Component {\n\n    state = {\n        profileImage: null,\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        console.log(e.target.body.value, e.target.image.value);\n        if (e.target.body.value || e.target.image.value) {\n            this.props.addPost(new FormData(e.target));\n        }\n    }\n\n    handleInputImage = (evt) => {\n        const file = evt.target.files[0];\n        const fr = new FileReader();\n        fr.readAsDataURL(file)\n        fr.onload = () => this.setState({ profileImage: fr.result });\n\n    }\n    render() {\n        return (\n            <Paper>\n                <form onSubmit={this.submitForm}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\">Have something in mind?</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField fullWidth name=\"body\" placeholder=\"Add post\" multiline variant=\"outlined\" />\n                        </Grid>\n                        {this.state.profileImage !== null &&\n                            <Grid item xs={12}>\n                                <img id=\"profileImageSrc\" src={this.state.profileImage} alt=\"Post image\" style={{ objectFit: \"contain\", width:\"100%\", padding:\"2px\" }} />\n                            </Grid>\n                        }\n\n                        <Grid item xs={12}>\n                            <input name=\"image\" accept=\"image/*\" className=\"d-none\" id=\"postImageInput\" type=\"file\" onChange={this.handleInputImage} />\n                            <label htmlFor=\"postImageInput\">\n                                <IconButton aria-label=\"upload picture\" component=\"span\">\n                                    <Image />\n                                </IconButton>\n                            </label>\n                            {this.state.profileImage!==null &&\n                                <Button onClick={(e)=>{document.getElementById(\"postImageInput\").value=\"\"; this.setState({profileImage: null});}}>Remove Image</Button>\n                            }\n                            <div style={{ marginLeft: \"auto\" }}>\n                                <Button color=\"primary\" type=\"submit\">Post</Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        );\n    }\n}\n\nexport default AddPost;",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":5,"column":5,"nodeType":"110","messageId":"111","endLine":5,"endColumn":11},{"ruleId":"108","severity":1,"message":"112","line":6,"column":5,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"113","line":7,"column":5,"nodeType":"110","messageId":"111","endLine":7,"endColumn":9},{"ruleId":"108","severity":1,"message":"114","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":10},{"ruleId":"108","severity":1,"message":"115","line":10,"column":5,"nodeType":"110","messageId":"111","endLine":10,"endColumn":9},{"ruleId":"108","severity":1,"message":"116","line":11,"column":5,"nodeType":"110","messageId":"111","endLine":11,"endColumn":11},{"ruleId":"108","severity":1,"message":"117","line":12,"column":5,"nodeType":"110","messageId":"111","endLine":12,"endColumn":18},{"ruleId":"108","severity":1,"message":"118","line":13,"column":5,"nodeType":"110","messageId":"111","endLine":13,"endColumn":22},{"ruleId":"108","severity":1,"message":"119","line":14,"column":5,"nodeType":"110","messageId":"111","endLine":14,"endColumn":11},{"ruleId":"108","severity":1,"message":"120","line":24,"column":23,"nodeType":"110","messageId":"111","endLine":24,"endColumn":36},{"ruleId":"108","severity":1,"message":"121","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"122","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":13},{"ruleId":"108","severity":1,"message":"123","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":15},{"ruleId":"108","severity":1,"message":"124","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":12},{"ruleId":"108","severity":1,"message":"125","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":13},{"ruleId":"108","severity":1,"message":"126","line":64,"column":15,"nodeType":"110","messageId":"111","endLine":64,"endColumn":19},{"ruleId":"108","severity":1,"message":"127","line":70,"column":15,"nodeType":"110","messageId":"111","endLine":70,"endColumn":23},{"ruleId":"108","severity":1,"message":"128","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"114","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"125","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"108","severity":1,"message":"129","line":2,"column":28,"nodeType":"110","messageId":"111","endLine":2,"endColumn":38},{"ruleId":"130","severity":1,"message":"131","line":9,"column":17,"nodeType":"132","endLine":9,"endColumn":101},{"ruleId":"108","severity":1,"message":"133","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":2,"column":21,"nodeType":"110","messageId":"111","endLine":2,"endColumn":25},{"ruleId":"108","severity":1,"message":"129","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":9,"column":26,"nodeType":"136","messageId":"137","endLine":9,"endColumn":28},{"ruleId":"130","severity":1,"message":"131","line":11,"column":21,"nodeType":"132","endLine":11,"endColumn":101},{"ruleId":"134","severity":1,"message":"135","line":14,"column":25,"nodeType":"136","messageId":"137","endLine":14,"endColumn":27},{"ruleId":"108","severity":1,"message":"138","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":39,"column":33,"nodeType":"132","endLine":39,"endColumn":170},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'Drawer' is defined but never used.","'DashboardIcon' is defined but never used.","'Input' is defined but never used.","'axios' is defined but never used.","'Comment' is defined but never used.","'Post' is defined but never used.","'Box' is defined but never used.","'post' is assigned a value but never used.","'comments' is assigned a value but never used.","'Component' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useRef' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]