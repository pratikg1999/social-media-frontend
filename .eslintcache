[{"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/index.js":"1","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/App.js":"2","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/hoc/providerHoc.js":"3","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/login/LoginApp.js":"4","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/axiosInstance.js":"5","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/containers/signup.js":"6","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/reducer.js":"7","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/actions.js":"8","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/dashboard/Dashboard.js":"9","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/profile/ProfilePage.js":"10","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/profile.js":"11","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/home/home.js":"12","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/comment/comment.js":"13","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post/post.js":"14","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post-card/post-card.js":"15","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/add-post/add-post.js":"16","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/userProfile.js":"17","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/edit-post/edit-post.js":"18"},{"size":312,"mtime":1610129642304,"results":"19","hashOfConfig":"20"},{"size":652,"mtime":1610214307016,"results":"21","hashOfConfig":"20"},{"size":291,"mtime":1610130196615,"results":"22","hashOfConfig":"20"},{"size":8385,"mtime":1610291463569,"results":"23","hashOfConfig":"20"},{"size":178,"mtime":1610277564722,"results":"24","hashOfConfig":"20"},{"size":4073,"mtime":1610162084755,"results":"25","hashOfConfig":"20"},{"size":1278,"mtime":1610376129105,"results":"26","hashOfConfig":"20"},{"size":251,"mtime":1610376058263,"results":"27","hashOfConfig":"20"},{"size":9778,"mtime":1610301223399,"results":"28","hashOfConfig":"20"},{"size":4407,"mtime":1610358016899,"results":"29","hashOfConfig":"20"},{"size":4327,"mtime":1610290816502,"results":"30","hashOfConfig":"20"},{"size":7100,"mtime":1610378197067,"results":"31","hashOfConfig":"20"},{"size":1197,"mtime":1610288390415,"results":"32","hashOfConfig":"20"},{"size":696,"mtime":1610300142117,"results":"33","hashOfConfig":"20"},{"size":8403,"mtime":1610375959948,"results":"34","hashOfConfig":"20"},{"size":2629,"mtime":1610288679765,"results":"35","hashOfConfig":"20"},{"size":2435,"mtime":1610275984130,"results":"36","hashOfConfig":"20"},{"size":3373,"mtime":1610386200303,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"11px870",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/index.js",[],["83","84"],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/App.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/hoc/providerHoc.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/login/LoginApp.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/axiosInstance.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/containers/signup.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/reducer.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/store/actions.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/dashboard/Dashboard.js",["85","86","87","88"],"import React, { Component } from 'react';\nimport axios from \"../../axiosInstance\";\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport {\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Typography,\n    AppBar,\n    Toolbar,\n    MenuItem,\n    Menu,\n    IconButton,\n    Backdrop,\n    CircularProgress,\n    Snackbar,\n    Avatar,\n} from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Dashboard as DashboardIcon, AccountCircle, Search } from \"@material-ui/icons\";\nimport { Switch, Route } from \"react-router-dom\";\nimport ProfilePage from \"../profile/ProfilePage\";\nimport Home from \"../home/home\";\nimport * as actions from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\n\nconst styles = (theme) => {\n    return {\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n        },\n    }\n};\n\nclass Dashboard extends Component {\n\n    constructor(props){\n        super(props);\n        axios.defaults.headers['x-access-token'] = window.localStorage[\"x-access-token\"];\n    }\n\n    handleMenu = (event) => {\n        // console.log(\"opening menu \", event.currentTarget);\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState((prevState, props) => {\n            return { anchorEl: null };\n        });\n    }\n\n    state = {\n        autoUser: null,\n        anchorEl: null,\n    }\n\n    searchUser = (e)=>{\n        console.log(\"searching user\");\n        if(this.state.autoUser!=null){\n            this.props.history.push(`/profile/${this.state.autoUser._id}`);\n        }\n    }\n\n\n    componentDidMount() {\n        axios.get(\"/user/getCurrentUserInfo\").then((response) => {\n            // console.log(response.data);\n            response.data.profileImage = axios.defaults.baseURL + response.data.profileImage;\n            this.props.modifyState({ isLoading: false, currentUserInfo: response.data, showSnackbar: true, snackbarMessage: \"User  info fetched\" });\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"fetching user error\", err.response);\n            }\n            else {\n                console.log(\"fetch error no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Some error occured!\" });\n        });\n\n        axios.get(\"/user/\").then((response) => {\n            console.log(\"all users\", response.data);\n            this.props.modifyState({ isLoading: false, users: response.data, showSnackbar: true, snackbarMessage: \"All users fetched\" });\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"all users fetching user error\", err.response);\n            }\n            else {\n                console.log(\"all users fetch error no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Some error occured all users!\" });\n        })\n\n    }\n\n    logout = ()=>{\n        window.localStorage.removeItem(\"x-access-token\");\n        this.props.clearState();\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <>\n                {this.props.isLoading &&\n                    <Backdrop className={classes.backdrop} open={this.props.isLoading} >\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                }\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title} onClick={()=>{this.props.history.push(\"/home\")}} style={{cursor: \"pointer\"}}>\n                            Social-media\n                        </Typography>\n                        {this.props.users !== undefined &&\n                            <>\n                                <Autocomplete\n                                    value={this.state.autoUser}\n                                    onChange={(event, newValue) => {\n                                        this.setState({ autoUser: newValue });\n                                    }}\n                                    id=\"find-users\"\n                                    style={{ width: 300 }}\n                                    options={this.props.users}\n                                    autoHighlight\n                                    getOptionLabel={(option) => option.firstName + \" \" + option.lastName}\n                                    renderOption={(option) => (\n                                        <React.Fragment>\n                                            <span className=\"pr-1\"><Avatar alt={option.firstName[0].toUpperCase() + option.lastName[0].toUpperCase()}\n                                                src={axios.defaults.baseURL + option.profileImage}\n                                            />\n                                            </span>\n                                            {option.firstName +\" \"+ option.lastName}\n                                        </React.Fragment>\n                                    )}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            style={{backgroundColor: \"#ffffff25\"}}\n                                            className=\"p-1\"\n                                            placeholder=\"Find a user\"\n                                            inputProps={{\n                                                style:{color: \"white\",},\n                                                ...params.inputProps,\n                                                className:\"px-1\",\n                                                autoComplete: 'new-password', // disable autocomplete and autofill\n                                            }}\n                                        />\n                                    )}\n                                />\n                                <IconButton onClick={this.searchUser}>\n                                    <Search/>\n                                </IconButton>\n                            </>\n                        }\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={this.handleMenu}\n                                color=\"inherit\"\n                            >\n                                <AccountCircle />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={this.state.anchorEl}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={this.state.anchorEl ? true : false}\n                                onClose={this.handleMenuClose}\n                            >\n                                <MenuItem onClick={() => { this.props.history.push(`/profile/${this.props.currentUserInfo._id}`); this.handleMenuClose(); }}>My profile</MenuItem>\n                                <MenuItem onClick={() => { this.props.history.push(\"/profile\"); this.handleMenuClose(); }}>Edit account</MenuItem>\n                                <MenuItem onClick={()=>{this.logout()}}>Logout</MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <div id=\"content\">\n                    <Switch>\n                        <Route path=\"/home\" exact component={Home} />\n                        <Route path=\"/profile/:userId\" component={ProfilePage} />\n                        <Route path=\"/profile\" component={ProfilePage} />\n                    </Switch>\n                </div>\n                { this.props.showSnackbar &&\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        open={this.props.showSnackbar}\n                        autoHideDuration={2000}\n                        onClose={() => this.props.modifyState({ showSnackbar: false })}\n                        message={this.props.snackbarMessage} />\n                }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.isLoading,\n        currentUserInfo: state.currentUserInfo,\n        showSnackbar: state.showSnackbar,\n        snackbarMessage: state.snackbarMessage,\n        users: state.users,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        modifyState: (newState) => dispatch({ type: actions.MODIFY_STATE, newState: newState }),\n        clearState: () => dispatch({ type: actions.CLEAR_STATE}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(withStyles(styles, { withTheme: true })(Dashboard)));","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/profile/ProfilePage.js",[],"/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/profile.js",["89","90","91"],"import React, { Component } from \"react\";\nimport { Grid, Input, TextField, Button, IconButton, Avatar } from \"@material-ui/core\";\nimport { PhotoCamera } from \"@material-ui/icons\"\nimport axios from \"../axiosInstance\"\nclass Profile extends Component {\n\n    state = {\n        profileImage: \"logo192.png\",\n    }\n\n    componentDidMount() {\n        //this.updateFormFeilds();\n\n        console.log(\"profile \", this.props);\n        if (this.props.info.profileImage) {\n            this.setState({ profileImage: this.props.info.profileImage });\n        }\n    }\n\n\n    handleInputImage = (evt) => {\n        const file = evt.target.files[0];\n        if(file){\n            const fr = new FileReader();\n            fr.readAsDataURL(file)\n            fr.onload = () => this.setState({ profileImage: fr.result });\n        }\n\n    }\n\n\n    updateFormFeilds() {\n        //Manually update TextFeilds as updatings state Here might cause infinite loop\n        for (const key in this.props.info) {\n            if (Object.hasOwnProperty.call(this.props.info, key)) {\n                const element = this.props.info[key];\n                if (document.getElementsByName(key).length > 0 && key !== \"profileImage\") {\n                    document.getElementsByName(key)[0].value = element;\n                }\n            }\n        }\n        if (this.props.info && this.props.info.profileImage) {\n            document.getElementById(\"profileImageSrc\").src = this.props.info.profileImage;\n        }\n    }\n\n    componentDidUpdate() {\n        //this.updateFormFeilds();\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.handleUpdateProfile(new FormData(e.target));\n    }\n\n    render() {\n        return (\n            <div className=\"col-sm-12 col-lg-10 col mx-auto mt-3 \">\n                <form onSubmit={this.onSubmit}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} className=\"text-center\">\n                            <Avatar id=\"profileImageSrc\" src={this.state.profileImage} alt=\"Profile pic\" style={{ width: \"300px\", height: \"300px\", objectFit: \"contain\", margin: \"auto\" }} />\n                            {this.props.editable &&\n                                <div className=\"text-center\">\n                                    <input name=\"profileImage\" accept=\"image/*\" className=\"d-none\" id=\"icon-button-file\" type=\"file\" onChange={this.handleInputImage} />\n                                    <label htmlFor=\"icon-button-file\">\n                                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\" startIcon={<PhotoCamera />}>\n                                            Change Image\n                                            </Button>\n                                    </label>\n                                </div>\n                            }\n\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <TextField defaultValue={this.props.info.firstName} required name=\"firstName\" disabled={!this.props.editable} fullWidth label=\"First Name\" variant=\"outlined\" />\n                        </Grid>\n                        <Grid item xs={12} lg={6}>\n                            <TextField defaultValue={this.props.info.lastName} required name=\"lastName\" disabled={!this.props.editable} fullWidth label=\"Last Name\" variant=\"outlined\" />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField defaultValue={this.props.info.email} required name=\"email\" disabled type=\"email\" fullWidth label=\"Email\" variant=\"outlined\" />\n                        </Grid>\n                        <Grid item xs={12} >\n                            <TextField defaultValue={this.props.info.phone} required name=\"phone\" disabled={!this.props.editable} type=\"tel\" fullWidth label=\"Phone\" variant=\"outlined\" />\n                        </Grid>\n                        {this.props.editable &&\n                            <Grid item xs={12} className=\"text-center\">\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Save changes</Button>\n                            </Grid>\n                        }\n                    </Grid>\n                </form>\n            </div>\n\n        );\n    }\n}\n\nexport default Profile;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/pages/home/home.js",["92","93","94"],"import React, { Component } from \"react\";\nimport Comment from \"../../components/comment/comment\";\nimport Post from \"../../components/post/post\";\nimport PostCard from \"../../components/post-card/post-card\";\nimport AddPost from \"../../components/add-post/add-post\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axiosInstance\";\nimport * as actions from \"../../store/actions\";\nimport { Box } from \"@material-ui/core\";\n\nclass Home extends Component {\n    componentDidMount() {\n        if (!this.props.postsData || this.props.postsData.length===0) {\n            this.fetchPosts();\n        }\n    }\n\n    fetchPosts = () => {\n        axios.get(\"/post/fetchPosts\").then(({ data }) => {\n            this.props.modifyState({ postsData: data });\n        }).catch(err => {\n            if (err.response) {\n                console.log(\"fError fetching posts!\", err.response);\n            }\n            else {\n                console.log(\"Error fetching posts! no response\", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error fetching posts!\" });\n\n        });\n    }\n\n    addPost = (postData) => {\n        axios.post(\"/post/createPost\", postData).then(({ data }) => {\n            this.fetchPosts();\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"Error postin new posts\", err.response);\n            }\n            else {\n                console.log(\"Error postin new posts no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error postin new posts!\" });\n\n        });\n    }\n\n    addComment = (newComment) => {\n        axios.post(\"/comment/createComment\", newComment, {headers: {'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'}}).then(({ data }) => {\n            console.log(\"comment to add\", data);\n            this.props.addCommentToState(data);\n            // this.fetchPosts();\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"Error commenting\", err.response);\n            }\n            else {\n                console.log(\"Error commenting no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error commenting!\" });\n\n        });\n    }\n\n    \n    changePostLike = (postId, status) => {\n        const postData = {postId : postId};\n        if(status){\n            axios.put(\"/post/likes\", postData).then(({ data }) => {\n                this.props.updateLikes(postId, data);\n                // this.fetchPosts();\n            }).catch((err) => {\n                if (err.response) {\n                    console.log(\"Error liking\", err.response);\n                }\n                else {\n                    console.log(\"Error liking no response \", err);\n                }\n                this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error liking!\" });\n                \n            });\n        }\n        else{\n            axios.delete(\"/post/likes\", {data: postData}).then(({ data }) => {\n                // this.fetchPosts();\n                this.props.updateLikes(postId, data);\n            }).catch((err) => {\n                if (err.response) {\n                    console.log(\"Error unliking\", err.response);\n                }\n                else {\n                    console.log(\"Error unliking no response \", err);\n                }\n                this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error unliking!\" });\n                \n            });\n            \n        }\n    }\n\n    onDelete  = (postId) => {\n        axios.delete(`/post/${postId}`).then(({ data }) => {\n            console.log(\"delete post\", postId, data);\n            this.props.deletePost(postId);\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"Error deleting\", err.response);\n            }\n            else {\n                console.log(\"Error deleting no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error deleting post!\" });\n        });\n    }\n\n    onEdit = (postId, postData) => {\n        // console.log(\"onEdit\", postData.body.value, postData.image.value);\n        axios.put(`/post/${postId}`, postData).then(({ data }) => {\n            console.log(\"edit post\", postId, data);\n            this.props.editPost(postId, data);\n        }).catch((err) => {\n            if (err.response) {\n                console.log(\"Error editing\", err.response);\n            }\n            else {\n                console.log(\"Error editing no response \", err);\n            }\n            this.props.modifyState({ isLoading: false, showSnackbar: true, snackbarMessage: \"Error editing post!\" });\n        });\n    }\n    \n    render() {\n        return (\n            <>\n                <div style={{ width: \"70%\", margin: \"auto\" }}>\n                    <AddPost addPost={this.addPost} />\n                </div>\n                <br />\n                <br />\n\n                {/* <Post userName=\"Pratik Gupta\" body=\"hello comment\" creationTime={new Date()} userImage=\"logo192.png\"/>\n                <Comment userName=\"Pratik Gupta\" body=\"hello comment\" creationTime={new Date()} userImage=\"logo192.png\" /> */}\n\n                <div style={{ width: \"70%\", margin: \"auto\" }} className=\"px-1 py-2\">\n                    {this.props.postsData !== undefined &&\n                        this.props.postsData.map(postData => {\n                            return (\n                                <React.Fragment key={postData.post._id}>\n                                    <PostCard post={{...(postData.post)}} comments={[...(postData.comments)]} addComment={this.addComment} changePostLike={this.changePostLike} onDelete={this.onDelete} onEdit={this.onEdit} />\n                                    <br />\n                                    <br />\n                                </React.Fragment>\n                            );\n                        })\n                    }\n                </div>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.isLoading,\n        currentUserInfo: state.currentUserInfo,\n        showSnackbar: state.showSnackbar,\n        snackbarMessage: state.snackbarMessage,\n        postsData: state.postsData,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        modifyState: (newState) => dispatch({ type: actions.MODIFY_STATE, newState: newState }),\n        addCommentToState: (comment) => dispatch({ type: actions.ADD_COMMENT, comment: comment }),\n        updateLikes: (postId, likes) => dispatch({ type: actions.UPDATE_LIKES, postId: postId, likes: likes}),\n        deletePost: (postId) => dispatch({ type: actions.DELETE_POST, postId: postId}),\n        editPost: (postId, updatedPost) => dispatch({ type: actions.EDIT_POST, postId: postId, updatedPost: updatedPost}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/comment/comment.js",["95","96","97","98"],"import React, { Component } from \"react\";\nimport { Grid, Paper, Box, Typography, Avatar } from \"@material-ui/core\";\nimport classes from \"./comment.module.css\";\nimport axios from \"../../axiosInstance\";\nconst Comment = (props) => {\n    return (\n        <Grid container justify=\"space-between\" className=\"text-left p-2\" >\n            <Grid item className={`text-center ${classes.avatarArea}`} mx={1} >\n                {/* circular avatar of commenter */}\n                <Avatar src={axios.defaults.baseURL + props.createdBy.profileImage} alt={`${props.createdBy.firstName[0].toUpperCase()}${props.createdBy.lastName[0].toUpperCase()}`}/>\n            </Grid>\n            <Grid item mx={1} style={{flexGrow: 2}}>\n                <div className={classes.bodyArea}>\n                    <div className={classes.title}>{`${props.createdBy.firstName} ${props.createdBy.lastName}`}</div>\n                    <div className={classes.commentBody}>{props.body}</div>\n                </div>\n                <div style={{lineHeight: \"2px\"}} className=\"pl-2 pt-1\"><span className={classes.subtitle}>{props.creationTime.toString()}</span></div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Comment;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post/post.js",["99","100","101","102","103","104"],"import React from \"react\";\nimport { Container, Grid, Typography, CardContent, CardMedia } from \"@material-ui/core\";\nimport classes from \"./post.module.css\";\nimport axios from \"../../axiosInstance\"\nconst Post = (props) => {\n    return (\n\n        <>\n            {props.image != undefined &&\n                <CardMedia>\n                    <img className={classes.postImage} src={axios.defaults.baseURL + props.image} />\n                </CardMedia>\n            }\n            {props.body != undefined &&\n                <CardContent>\n                    <div className={classes.postBody}>{props.body}</div>\n                </CardContent>\n            }\n\n\n        </>\n\n\n\n    );\n}\n\nexport default Post;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/post-card/post-card.js",["105","106"],"import Post from \"../post/post\";\nimport Comment from \"../comment/comment\";\nimport React, { useRef } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Grid, TextField, Card, CardHeader, CardContent, CardActions, Avatar, IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Favorite, MoreVert, Send } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axiosInstance\"\nimport { AvatarGroup } from '@material-ui/lab';\nimport EditPost from \"../edit-post/edit-post\";\n\nconst PostCard = (props) => {\n\n    const addCommentRef = useRef(null);\n    const [cardOverflowAnchor, setCardOverflowAnchor] = React.useState(null);\n    const cardOverflowOpen = Boolean(cardOverflowAnchor);\n\n    const handleCardOverflowMenu = (event) => {\n        setCardOverflowAnchor(event.currentTarget);\n    };\n\n    const handleCardOverflowClose = () => {\n        setCardOverflowAnchor(null);\n    };\n\n    const submitCommentForm = (e) => {\n        e.preventDefault();\n        let formData = new FormData(e.target);\n        formData.append(\"post\", props.post._id);\n        // let comment = {\n        //     body: e.target.body.value,\n        // }\n        // comment[\"post\"] = props.post._id;\n        // console.log(\"new comment \", comment)\n        props.addComment(formData);\n    }\n\n    const isLiked = (props.currentUserInfo && props.post.likes.map(e => e._id).includes(props.currentUserInfo._id));\n    console.log(props.post._id, isLiked, props.post.likes.map(e => e._id));\n\n    return (\n        <>\n            <Card className=\"py-2\">\n\n                <CardHeader\n\n                    avatar={<Avatar className=\"bg-danger\" alt={props.post.createdBy.firstName[0].toUpperCase() + props.post.createdBy.lastName[0].toUpperCase()} src={axios.defaults.baseURL + props.post.createdBy.profileImage} />}\n                    title={<span onClick={() => { props.history.push(`/profile/${props.post.createdBy._id}`) }} style={{ cursor: \"pointer\" }}>{props.post.createdBy.firstName + \" \" + props.post.createdBy.lastName}</span>}\n                    subheader={props.post.creationTime ? new Date(props.post.creationTime).toDateString() : \"\"}\n                    action={props.currentUserInfo !== undefined && props.currentUserInfo._id == props.post.createdBy._id ?\n                        <>\n                            <IconButton\n                                aria-label=\"settings\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleCardOverflowMenu}\n                                color=\"inherit\"\n                            >\n                                <MoreVert />\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={cardOverflowAnchor}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'right',\n                                }}\n                                open={cardOverflowOpen}\n                                onClose={handleCardOverflowClose}\n                            >\n                                <MenuItem onClick={() => { props.onDelete(props.post._id); handleCardOverflowClose() }}>Delete</MenuItem>\n                                <MenuItem onClick={() => { handleCardOverflowClose() }} data-toggle=\"modal\" data-target={`#modal${props.post._id}`}>Edit</MenuItem>\n                            </Menu>\n                        </>\n                        : null\n                    }\n\n                />\n                <hr className=\"m-0\" />\n                <Post {...props.post} />\n                {props.post.likes.length > 0 &&\n                    <div className=\"px-3\" style={{ fontSize: \"small\", color: \"grey\" }}>\n                        <div className=\"d-table-row\">\n                            <span className=\"d-table-cell pr-1\" style={{ verticalAlign: \"middle\" }}>Liked by</span>\n                            <AvatarGroup max={5}>\n                                {props.post.likes.slice(0, 3).map(user => {\n                                    return (\n                                        // <Avatar src=\"good\" alt=\"temp\"/>\n                                        // <span>{console.log(\"inside\")}</span>\n                                        <Avatar key={user._id} alt={user.firstName[0].toUpperCase() + user.lastName[0].toUpperCase()} src={axios.defaults.baseURL + user.profileImage} style={{ width: \"23px\", height: \"23px\" }} />\n                                    );\n                                })}\n                            </AvatarGroup>\n                            {props.post.likes.length - 3 > 0 &&\n                                <span className=\"d-table-cell pl-1\" style={{ verticalAlign: \"middle\" }}>and {props.post.likes.length - 3} others</span>\n                            }\n                        </div>\n                    </div>\n                }\n                <CardActions className=\"pt-0\">\n                    <div>\n                        <IconButton aria-label=\"add to favorites\" style={isLiked ? { color: \"red\" } : {}} onClick={() => props.changePostLike(props.post._id, !isLiked)}>\n                            <Favorite />\n                        </IconButton>\n                        {/* <div className=\"m-auto\">{props.post.likes.length + \" likes\"}</div> */}\n                    </div>\n                    <form onSubmit={submitCommentForm} className=\"w-100\">\n                        <Grid item xs={12} container justify=\"space-between\" alignItems=\"center\">\n                            <Grid item style={{ flexGrow: 10 }}>\n                                <TextField required fullWidth inputRef={addCommentRef} name=\"body\" placeholder=\"Add comment\" multiline variant=\"outlined\" size=\"small\" style={{ borderRadius: \"25%\" }} />\n                            </Grid>\n                            <Grid item>\n                                <IconButton type=\"submit\"><Avatar className=\"bg-primary\"><Send /></Avatar></IconButton>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </CardActions>\n\n\n                {props.comments.length > 0 &&\n                    <CardContent>\n                        <Grid item xs={12}>\n                            {props.comments.map(comment => {\n                                // console.log(comment);\n                                return (<Comment {...comment} key={comment.username + comment.creationTime} />);\n                            })}\n                        </Grid>\n                    </CardContent>\n                }\n            </Card>\n            <div className=\"modal fade\" id={`modal${props.post._id}`} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id={`modal${props.post._id}_title`}>Edit Post</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\"> <EditPost onEdit={props.onEdit} post={props.post}/> </div>\n                        {/* <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\n                        </div> */}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUserInfo: state.currentUserInfo,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(PostCard));","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/add-post/add-post.js",["107","108","109"],"import React, { useRef } from \"react\";\nimport { Button, Grid, TextField, Paper, Typography, IconButton } from \"@material-ui/core\";\nimport { Image } from '@material-ui/icons';\n\nclass AddPost extends React.Component {\n\n    state = {\n        profileImage: null,\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        // console.log(e.target.body.value, e.target.image.value);\n        if (e.target.body.value || e.target.image.value) {\n            this.props.addPost(new FormData(e.target));\n        }\n    }\n\n    handleInputImage = (evt) => {\n        const file = evt.target.files[0];\n        const fr = new FileReader();\n        fr.readAsDataURL(file)\n        fr.onload = () => this.setState({ profileImage: fr.result });\n\n    }\n    render() {\n        return (\n            <Paper>\n                <form onSubmit={this.submitForm}>\n                    <Grid container className=\"p-3 mt-3\">\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\">Have something in mind?</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField fullWidth name=\"body\" placeholder=\"Add post\" multiline variant=\"outlined\" />\n                        </Grid>\n                        {this.state.profileImage !== null &&\n                            <Grid item xs={12} className=\"py-1\">\n                                <img id=\"profileImageSrc\" src={this.state.profileImage} alt=\"Post image\" style={{ objectFit: \"contain\", width:\"100%\", padding:\"2px\" }} />\n                            </Grid>\n                        }\n\n                        <Grid item xs={12}>\n                            <input name=\"image\" accept=\"image/*\" className=\"d-none\" id=\"postImageInput\" type=\"file\" onChange={this.handleInputImage} />\n                            <label htmlFor=\"postImageInput\">\n                                <Button aria-label=\"upload picture\" component=\"span\" startIcon={<Image/>}>Add Image</Button>\n                            </label>\n                            {this.state.profileImage!==null &&\n                                <Button onClick={(e)=>{document.getElementById(\"postImageInput\").value=\"\"; this.setState({profileImage: null});}}>Remove Image</Button>\n                            }\n                            <div style={{ marginLeft: \"auto\" }}>\n                                <Button color=\"primary\" type=\"submit\">Post</Button>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        );\n    }\n}\n\nexport default AddPost;","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/userProfile.js",["110","111","112"],"import React, { Component } from \"react\";\nimport { Grid, Button, Avatar, Container, Typography, } from \"@material-ui/core\";\nimport { PhotoCamera, RssFeed as FollowIcon } from \"@material-ui/icons\"\nimport { connect } from \"react-redux\";\n\nimport axios from \"../axiosInstance\"\n\nclass UserProfile extends Component {\n\n    render() {\n        return (\n            <Container className=\"py-3\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={3}>\n                        <Avatar alt={this.props.info.firstName[0].toUpperCase() + this.props.info.lastName[0].toUpperCase()}\n                            src={this.props.info.profileImage}\n                            style={{ width: \"8em\", height: \"8em\" }}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={9}>\n                        <Typography variant=\"subtitle1\">{this.props.info.firstName + \" \" + this.props.info.lastName}</Typography>\n                        <Typography variant=\"subtitle2\">{this.props.info.email}</Typography>\n                    </Grid>\n\n                    {this.props.currentUserInfo && this.props.info._id !== this.props.currentUserInfo._id &&\n                        <Grid item sm={12} sm={4}>\n                            {\n                            this.props.info.isFollowing ?\n                                <Button variant=\"outlined\" startIcon={<FollowIcon />} onClick={()=>this.props.onUnfollow(this.props.info._id)}>UnFollow</Button>\n                                : <Button variant=\"outlined\" startIcon={<FollowIcon />} onClick={()=>this.props.onFollow(this.props.info._id)}>Follow</Button>\n                            }\n                        </Grid>\n                    }\n                    <Grid item xs={12} sm={4}>\n                        <Button variant=\"outlined\" >Following {this.props.info.followings ? this.props.info.followings.length : 0}</Button>\n                    </Grid>\n                    <Grid item xs={12} sm={4}>\n                        <Button variant=\"outlined\" >Followers {this.props.info.followers ? this.props.info.followers.length : 0}</Button>\n                    </Grid>\n                </Grid>\n\n            </Container >\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        currentUserInfo: state.currentUserInfo,\n        isLoading: state.isLoading,\n    };\n}\nexport default connect(mapStateToProps)(UserProfile);\n\n\n","/mnt/Data/Projects/internship projects/hyperverge/social-media-frontend/src/components/edit-post/edit-post.js",["113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":5,"nodeType":"121","messageId":"122","endLine":5,"endColumn":11},{"ruleId":"119","severity":1,"message":"123","line":7,"column":5,"nodeType":"121","messageId":"122","endLine":7,"endColumn":9},{"ruleId":"119","severity":1,"message":"124","line":8,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":10},{"ruleId":"119","severity":1,"message":"125","line":21,"column":23,"nodeType":"121","messageId":"122","endLine":21,"endColumn":36},{"ruleId":"119","severity":1,"message":"126","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"119","severity":1,"message":"127","line":2,"column":42,"nodeType":"121","messageId":"122","endLine":2,"endColumn":52},{"ruleId":"119","severity":1,"message":"128","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"129","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"130","line":3,"column":8,"nodeType":"121","messageId":"122","endLine":3,"endColumn":12},{"ruleId":"119","severity":1,"message":"131","line":9,"column":10,"nodeType":"121","messageId":"122","endLine":9,"endColumn":13},{"ruleId":"119","severity":1,"message":"132","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"124","line":2,"column":16,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"119","severity":1,"message":"131","line":2,"column":23,"nodeType":"121","messageId":"122","endLine":2,"endColumn":26},{"ruleId":"119","severity":1,"message":"133","line":2,"column":28,"nodeType":"121","messageId":"122","endLine":2,"endColumn":38},{"ruleId":"119","severity":1,"message":"134","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":19},{"ruleId":"119","severity":1,"message":"123","line":2,"column":21,"nodeType":"121","messageId":"122","endLine":2,"endColumn":25},{"ruleId":"119","severity":1,"message":"133","line":2,"column":27,"nodeType":"121","messageId":"122","endLine":2,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":9,"column":26,"nodeType":"137","messageId":"138","endLine":9,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":11,"column":21,"nodeType":"141","endLine":11,"endColumn":101},{"ruleId":"135","severity":1,"message":"136","line":14,"column":25,"nodeType":"137","messageId":"138","endLine":14,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"135","severity":1,"message":"142","line":50,"column":94,"nodeType":"137","messageId":"138","endLine":50,"endColumn":96},{"ruleId":"119","severity":1,"message":"143","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":23},{"ruleId":"119","severity":1,"message":"127","line":2,"column":54,"nodeType":"121","messageId":"122","endLine":2,"endColumn":64},{"ruleId":"144","severity":1,"message":"145","line":39,"column":33,"nodeType":"141","endLine":39,"endColumn":170},{"ruleId":"119","severity":1,"message":"146","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":21},{"ruleId":"119","severity":1,"message":"128","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":26,"column":44,"nodeType":"149","endLine":26,"endColumn":50},{"ruleId":"119","severity":1,"message":"143","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":53,"column":33,"nodeType":"141","endLine":53,"endColumn":187},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Paper' is defined but never used.","'DashboardIcon' is defined but never used.","'Input' is defined but never used.","'IconButton' is defined but never used.","'axios' is defined but never used.","'Comment' is defined but never used.","'Post' is defined but never used.","'Box' is defined but never used.","'Component' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'useRef' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'PhotoCamera' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]